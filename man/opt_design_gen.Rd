% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opt_design.R
\name{opt_design_gen}
\alias{opt_design_gen}
\title{Optimize a Basket Trial Design}
\usage{
opt_design_gen(
  design,
  utility,
  algorithm,
  detail_params,
  utility_params,
  algorithm_params,
  trace = TRUE
)
}
\arguments{
\item{design}{An object created with one of the \code{setup} functions.}

\item{utility}{A function returning the utility of a parameter combination
`x`, of the form `utility(design, x, detail_params, ...)`, where `...` may
further parameters to be supplied to the utility.}

\item{algorithm}{A function returning the optimization algorithm's results,
should have the form `algorithm(fun, trace, ...)`, where `fun` is the
function to be optimized, `trace` is a logical for requesting algorithm
trace, and `...` may be further parameters of the optimization algorithm.}

\item{detail_params}{A named list of parameters that need to be supplied to
`get_details()`.}

\item{utility_params}{A named list of further parameters that need to be
supplied to  the utility function.}

\item{algorithm_params}{A named list of further parameters that need to be
supplied to the optimization algorithm.}

\item{trace}{A logical, should the trace of the optimization algorithm be
returned?}
}
\value{
a list consisting of the optimization result vector and the trace of
 the optimization algorithm
}
\description{
Optimize the parameters of a basket trial design using a utility-based
approach with a simulation algorithm of your choice.
}
\examples{
design <- setup_fujikawa(k = 3, p0 = 0.2, shape1 = 1, shape2 = 1)
opt_design_gen(design = design,
               utility = u_powfwer_discont,
               algorithm = optimization_optim_sa,
               detail_params = list(n = 20, p1 = c(0.5, 0.2, 0.2),
                                    logbase = exp(1), exact = TRUE),
               utility_params = list(alpha = 0.05),
               algorithm_params = list(start = c(lambda = 0.99,
                                                    epsilon = 2,
                                                    tau = 0.5),
                                       maximization = TRUE,
                                       lower = c(lambda = 0.001,
                                                    epsilon = 1,
                                                    tau = 0.001),
                                       upper = c(lambda = 0.999,
                                                    epsilon = 10,
                                                    tau = 0.999),
                                       control = list(t0 = 1000,
                                                      t_min = 0.1,
                                                      r = 0.6,
                                                      k = 1,
                                                      maxgood = 1)))
}
